///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyFirstTestProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The KeyPassAddNewEntry recording.
    /// </summary>
    [TestModule("832b87ce-2869-4b61-a8ca-aafb37d94885", ModuleType.Recording, 1)]
    public partial class KeyPassAddNewEntry : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyFirstTestProjectRepository repository.
        /// </summary>
        public static MyFirstTestProjectRepository repo = MyFirstTestProjectRepository.Instance;

        static KeyPassAddNewEntry instance = new KeyPassAddNewEntry();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public KeyPassAddNewEntry()
        {
            Tile = "KeyPassDemo";
            UserName = "KeyPassDemo";
            Password = "Demo123";
            varURL = "http://bitly.com/wp demo";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static KeyPassAddNewEntry Instance
        {
            get { return instance; }
        }

#region Variables

        string _Tile;

        /// <summary>
        /// Gets or sets the value of variable Tile.
        /// </summary>
        [TestVariable("cf62cf4a-ea59-4ff7-8b0a-b6802c3e1c42")]
        public string Tile
        {
            get { return _Tile; }
            set { _Tile = value; }
        }

        string _UserName;

        /// <summary>
        /// Gets or sets the value of variable UserName.
        /// </summary>
        [TestVariable("4dd1818f-cb55-4194-b6c6-9f9c63969a55")]
        public string UserName
        {
            get { return _UserName; }
            set { _UserName = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("9c0ff052-b148-4389-b73b-c3f89138339d")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _varURL;

        /// <summary>
        /// Gets or sets the value of variable varURL.
        /// </summary>
        [TestVariable("ce1f2dd2-2e80-43f9-9d67-7d5b5b73d509")]
        public string varURL
        {
            get { return _varURL; }
            set { _varURL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varExpires.
        /// </summary>
        [TestVariable("c57b4175-cd8f-4f08-999d-4a396515ce22")]
        public string varExpires
        {
            get { return repo.varExpires; }
            set { repo.varExpires = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.Edit' at 30;7.", repo.MainForm.EditInfo, new RecordItemIndex(0));
            repo.MainForm.Edit.Click("30;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KeePass.AddEntry' at 36;6.", repo.KeePass.AddEntryInfo, new RecordItemIndex(1));
            repo.KeePass.AddEntry.Click("36;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.Text' at 34;9.", repo.PwEntryForm.MTabEntry1.TextInfo, new RecordItemIndex(2));
            repo.PwEntryForm.MTabEntry1.Text.Click("34;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tile' with focus on 'PwEntryForm.MTabEntry1.Text'.", repo.PwEntryForm.MTabEntry1.TextInfo, new RecordItemIndex(3));
            repo.PwEntryForm.MTabEntry1.Text.PressKeys(Tile);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.MBtnIcon' at 13;9.", repo.PwEntryForm.MTabEntry1.MBtnIconInfo, new RecordItemIndex(4));
            repo.PwEntryForm.MTabEntry1.MBtnIcon.Click("13;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Select() on item 'IconPickerForm.ListItem1'.", repo.IconPickerForm.ListItem1Info, new RecordItemIndex(5));
            repo.IconPickerForm.ListItem1.Select();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'IconPickerForm.MBtnOK' at 26;7.", repo.IconPickerForm.MBtnOKInfo, new RecordItemIndex(6));
            repo.IconPickerForm.MBtnOK.Click("26;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.UserName' at 28;7.", repo.PwEntryForm.MTabEntry1.UserNameInfo, new RecordItemIndex(7));
            repo.PwEntryForm.MTabEntry1.UserName.Click("28;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UserName' with focus on 'PwEntryForm.MTabEntry1.UserName'.", repo.PwEntryForm.MTabEntry1.UserNameInfo, new RecordItemIndex(8));
            repo.PwEntryForm.MTabEntry1.UserName.PressKeys(UserName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.Password' at 158;7.", repo.PwEntryForm.MTabEntry1.PasswordInfo, new RecordItemIndex(9));
            repo.PwEntryForm.MTabEntry1.Password.Click("158;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'PwEntryForm.MTabEntry1.Password'.", repo.PwEntryForm.MTabEntry1.PasswordInfo, new RecordItemIndex(10));
            repo.PwEntryForm.MTabEntry1.Password.PressKeys(Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.Repeat' at Center.", repo.PwEntryForm.MTabEntry1.RepeatInfo, new RecordItemIndex(11));
            repo.PwEntryForm.MTabEntry1.Repeat.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'PwEntryForm.MTabEntry1.Repeat'.", repo.PwEntryForm.MTabEntry1.RepeatInfo, new RecordItemIndex(12));
            repo.PwEntryForm.MTabEntry1.Repeat.PressKeys(Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MTabEntry1.URL' at 15;7.", repo.PwEntryForm.MTabEntry1.URLInfo, new RecordItemIndex(13));
            repo.PwEntryForm.MTabEntry1.URL.Click("15;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varURL'.", new RecordItemIndex(14));
            Keyboard.Press(varURL);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'PwEntryForm.MTabEntry1.MBtnStandardExpires' at 19;15.", repo.PwEntryForm.MTabEntry1.MBtnStandardExpiresInfo, new RecordItemIndex(15));
            repo.PwEntryForm.MTabEntry1.MBtnStandardExpires.DoubleClick("19;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KeePass.MenuItem1Year' at 35;1.", repo.KeePass.MenuItem1YearInfo, new RecordItemIndex(16));
            repo.KeePass.MenuItem1Year.Click("35;1");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PwEntryForm.MBtnOK' at 22;17.", repo.PwEntryForm.MBtnOKInfo, new RecordItemIndex(17));
            repo.PwEntryForm.MBtnOK.Click("22;17");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
